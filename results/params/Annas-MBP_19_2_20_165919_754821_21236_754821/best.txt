Generation:
30

Phenotype:
import numpy as np
from src import *
import testFunctions as tf
from animation import animation
def ge(n, my_func, bounds, dimension, max_nfe):
  Solution.setProblem(my_func, bounds, dimension, maximize=False)
  X = Solution.initialize(n)
  for Xi in X:    Xi.setX(op.init_random(*Solution.bounds, Solution.dimension))
  [Xi.getFitness() for Xi in X]
  Solution.updateHistory(X)
  while Solution.nfe < max_nfe:
    [Xi.getFitness() for Xi in X]
    op.param = {'w':0.00,'c1':0.00,'c2':0.00,'alpha':0.00,'beta':0.00,'pr':0.00}
    X1 = op.op_pso(X, op.select_random, op.mut_de, op.crx_exponential)
    X = op.replace_if_random(X, X1)
  return X
ge(n=10, my_func=tf.ackley_function, bounds=(-5, 5), dimension=20, max_nfe=100)
XXX_output_XXX = Solution.best.getFitness()

Genotype:
[5600, 4265, 302, 5332, 4060, 3667, 7699, 6245, 3532, 5558, 7444, 7771, 7331, 1713, 2545, 9491, 7542, 7874, 7542, 7874, 257, 3547, 5783, 8538, 5057, 2932, 5205, 9728, 7542, 7771, 257, 3618, 5783, 9503, 7016, 5556, 5571, 6422, 349, 5205, 3133, 6286, 7205, 991, 1827, 1256, 9012, 217, 3282, 7017]
Tree:
None

Fitness:
-12.582343418957228