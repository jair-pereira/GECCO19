Generation:
30

Phenotype:
import numpy as np
import src
import testFunctions as tf
from animation import animation
n = 30
iteration = 10
my_func = tf.katsuura
dimension = 40
bounds = -5, 5
beta = .5
pr = .7
tournament = 5
w = .5
c1 = .5
c2 = 1
pa = .25
dp = .1
def ge():
  X = np.array([src.solution(my_func, dimension, bounds) for i in range(n)])
  [Xi.initRandom() for Xi in X]
  src.solution.updateHistory(X)
  for it in range(iteration):
    X1 = src.op.op_pso(X, src.op.select_random, src.op.mut_de, src.op.crx_exponential)
    X = src.op.replace_if_best(X, X1)
    X1 = src.op.op_pso(X, src.op.select_random, src.op.mut_pso, src.op.crx_exponential)
    X = src.op.replace_if_random(X, X1)
  return X
ge()
XXX_output_XXX = src.solution.best.getFitness()

Genotype:
[32, 44, 55, 2, 73, 90, 91, 70, 94, 62, 28, 51, 13, 91, 27, 35, 31, 28, 94, 99, 87, 35, 47, 70, 91, 82, 69, 68, 47, 19, 30, 58, 29, 61, 38, 62, 99, 22, 61, 8, 5, 53]
Tree:
None

Fitness:
-0.0