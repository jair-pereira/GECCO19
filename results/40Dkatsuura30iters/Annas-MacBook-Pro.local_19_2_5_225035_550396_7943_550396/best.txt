Generation:
30

Phenotype:
import numpy as np
import src
import testFunctions as tf
from animation import animation
n = 50
iteration = 30
my_func = tf.katsuura
dimension = 40
bounds = -5, 5
beta = .5
pr = .7
tournament = 5
w = .5
c1 = .5
c2 = 1
pa = .25
dp = .1
def ge():
  X = np.array([src.solution(my_func, dimension, bounds) for i in range(n)])
  [Xi.initRandom() for Xi in X]
  src.solution.updateHistory(X)
  for it in range(iteration):
    X1 = src.op.op_pso(X, src.op.select_random, src.op.mut_de, src.op.crx_exponential)
    X = X1
    X1 = src.op.op_pso(X, src.op.select_random, src.op.mut_pso, src.op.crx_exponential)
    X = src.op.replace_if_random(X, X1)
  return X
ge()
XXX_output_XXX = src.solution.best.getFitness()

Genotype:
[72, 90, 73, 6, 33, 31, 91, 77, 72, 40, 40, 81, 3, 40, 40, 81, 10, 3, 59, 33, 98, 83, 96, 68, 60, 27, 40, 47, 4, 39, 51, 8, 89, 20, 77, 95, 20, 62, 13, 56]
Tree:
None

Fitness:
-0.0